! Configuration File for keepalived

# vi /etc/keepalived/keepalived.conf

# 全局配置主要配置故障发生时的通知对象和机器ID。
global_defs {

    notification_email {
        support@rancher.cn    # 设置告警邮箱接收地址后，需要打开sendmail服务。
    }
    notification_email_from s_xl@xl.com    # 设置邮件发送地址
    smtp_server 192.168.2.241    # 设置邮件通知的SMTP服务器地址
    smtp_connect_timeout 30      # 设置通知SMTP服务器的超时时间
    router_id LVS_DEVEL_1        # 路由ID，标识该节点的字符串，用于发送电子邮件通知

}

# 自定义VRRP实例健康检查脚本keepalive只能监控自身问题和网络故障。脚本可以添加其他监控来决定是否在主备之间切换。
vrrp_script chk_sshd {

    script "killall -0 sshd"    # 使用实例查询sshd服务是否正在运行

    interval 2         # 检查间隔
    weight -4          # 检查失败减重的重量

}

# VRRP实例定义对外提供服务的VIP区域和相关属性
vrrp_instance VI_1 {

    state BACKUP           # “状态”只有“MASTER”和“BACKUP”，且必须为大写，“MASTER”为“working”，“BACKUP”为“standby”。
    interface eth0         # 节点固有IP (非vip) 网卡，用于发送 VRRP 报文
    virtual_router_id 51   # 虚拟路由ID、相同vrrp_instance MASTER和BACKUP的vitrual_router_id需要保持一致
    priority 100           # priority，同一vrrp_instance的MASTER优先级必须高于BACKUP
    advert_int 1           # MASTER 和 BACKUP 负载均衡器同步检查间隔(秒)
    nopreempt              # 非抢占模式
    authentication {       #
        auth_type PASS     # 鉴权方式，支持PASS和HA
        auth_pass Rancher@123456     # MASTER和BACKUP使用相同的密码进行通信
    }

    virtual_ipaddress {    # 虚拟IP地址(VIP)，可以有多个地址，每行一个
        192.168.12.200
    }

    track_script {         # 自定义健康检查脚本
        chk_sshd           # 配置上述自定义vrrp脚本调用名
    }
}

# 设置虚拟服务器
virtual_server 192.168.12.200 9443 {     # 指定虚拟IP地址和业务端口

    delay_loop 6             # 检查周期，6秒
    lb_algo rr               # 负载均衡调度算法，一般采用 wrr、rr、WLC
    lb_kind DR               # 负载均衡转发规则。一般包括DR、NAT、TUN 3种
    persistence_timeout 5    # 会议举行的时间。在不超过保持时间的情况下，将用户请求间隔分配到业务节点
    protocol TCP             # 转发协议有TCP和UDP两种。

    # 配置实服务器
    real_server 192.168.2.222 6443 {    # 指定后端真实服务器 IP和端口

        weight 1       # 权重，值越大，权重越高

        # 常用的TCP_CHECK, HTTP_GET, SSL_GET, MISC_CHECK(自定义脚本)
        TCP_CHECK {               # 使用TcpCheck检查RealServer的健康状态。
            connect_timeout 10    # 连接超时
            nb_get_retry 3        # 
            delay_before_retry 3  # 
            connect_port 6443     # 检测端口
        }
    }
}